{"name":"Memorystorage","tagline":"Memory-backed storage object that implements the Web Storage API","body":"# memorystorage <sub><sup>v0.9.6</sup></sub>\r\nMemory-backed storage that implements the [Web Storage API](http://www.w3.org/TR/webstorage/), making it a drop-in replacement for `localStorage` and `sessionStorage` in environments where these are not available. \r\n\r\n## Download\r\n* [memorystorage.js](https://cdn.rawgit.com/download/memorystorage/0.9.6/src/memorystorage.js) (~3kB, commented)\r\n* [memorystorage.min.js](https://cdn.rawgit.com/download/memorystorage/0.9.6/dist/memorystorage.min.js) (~2kB, minified)\r\n* [memorystorage.min.js.map](https://cdn.rawgit.com/download/memorystorage/0.9.6/dist/memorystorage.min.js.map) (~2kB, debug map file)\r\n\r\n## Include on your page\r\n`memorystorage` can be used directly from CDN, or from a local script file.\r\n\r\n### CDN\r\n```xml\r\n<script src=\"https://cdn.rawgit.com/download/memorystorage/0.9.6/dist/memorystorage.min.js\"></script>\r\n```\r\n\r\n### Local script file\r\nDownload memorystorage.min.js, place it in a folder `lib` in the root of your website and include it like this:\r\n```xml\r\n<script src=\"lib/memorystorage.min.js\"></script>\r\n```\r\n\r\n## Create a memory storage object\r\n```javascript\r\nvar memoryStorage = new MemoryStorage('my-app');\r\n```\r\n\r\n## Use it\r\n```javascript\r\nmemoryStorage.setItem('myString', 'Hello MemoryStorage!');\r\nmemoryStorage.myObject = JSON.stringify({my: 'object'}));\r\nalert(memoryStorage.getItem('My string')); // alerts 'Hello MemoryStorage!'\r\nalert(memoryStorage['My string']); // alerts 'Hello MemoryStorage!'\r\nalert(memoryStorage.length); // alerts '2'\r\nalert(memoryStorage.key(1)); // alerts 'My object'\r\nmemoryStorage.removeItem('My string');\r\nalert(memoryStorage.length); // alerts '1'\r\nmemoryStorage.clear();\r\nalert(memoryStorage.length); // alerts '0'\r\n```\r\n\r\n## Beyond the Web Storage API\r\nMemoryStorage is type-agnosic; it doesn't care about the type of data you store. \r\nIf you want to remain within the Web Storage API, you should only read and write strings, \r\nhowever if you want you can store other types just as well:\r\n```javascript\r\nmemoryStorage.myObject = {my: 'object'};\r\nalert(memoryStorage.myObject.my); // alerts 'object'\r\nvar tree = {\r\n\tnested: {\r\n\t\tobjects: {\r\n\t\t\tworking: 'Sure!'\r\n\t\t}\r\n\t}\r\n}\r\nmemoryStorage.setItem('tree', tree);\r\nalert(memoryStorage.tree.nested.objects.working); // alerts 'Sure!'\r\n```\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}